// Notes and ideas

https://github.com/gilecheverria/UP_Battle_Project/blob/master/design.txt
This link about simple file like this one with all classes/properties/methods in hierarchy to observe it's relationship and project struct. Feels bette then Mural

if you want to separate a class or a service just make it's property as privates and you will see what parts of the code requires modification to fix errors

// MARK: 1 Main function start() with start/menu/welcome sound

// MARK: 2 Second function update() to constantly observe our game.



// Narrator should be the hero own voice of madness 

// add animation when you enter new room. Just a simple visual effect on the screen borders like a light should move from top to bottom and vice versa. Something simple

// Kill monsters fast / think less to get a bonus of collecting soul/black power because of your cold heart decision making. To increase game speed especially on easier levels

// Swipes on the screen in special order to activate special skills and improve it's damage/effect. Analogue is GearsOfWars with nice recharge -> more damage/slower recharge

// Map of Locations:
- Town (In, BlackSmith, Store, Alch)
- Dungeon
- Cursed Charch
- Place to rechard inside the Dungeon
- Dungeon Room
- Dungeon Corridor


What I meant is separating logic out of the ViewModel entirely â€” into dedicated classes or services, for example:

class HeroActionManager {
	func performAttack(hero: inout Character, enemy: inout Character) -> Int { ... }
	func performHeal(hero: inout Character) -> Bool { ... }
	// etc
}

Then in RoomViewModel, you'd just call:
let damage = heroActions.performAttack(hero: &hero, enemy: &enemy)

GameState Over-Reliance

class GameState {
	var dungeonState: DungeonState
	var roomState: RoomState
	var combatState: CombatState
	// etc.
}

GameStates:
- Menu
- Global Map
- Local Map
- Combat

I still can add Attack/Neutral/Defence stances to the game
Attack Stance -> + 10% of melee damage, no spells/def abilities allowed (can use charge)
Defence Stance -> + 10% of defence, no spells, attack abilities allowed (can use stun)
Neutral Stance -> almost all abilities and magic allowed no bonus damage/def

in my game we use room based dungeon map via DArkest Dungeon. No models only some kind of event. At this room we got nothing/quest/chest/trap/enemy

Top part of the RoomScreen can be changes in the same way as we can change a menu. If there is no enemy put the chest/quest/event here

Add different types of room with different effects for both enemies and allies
Example: Poisoned Swamp -> damages allies and give benefits to slymes

Now i have relationship like:
RoomGameState -> extractSnapshot -> use in RoomGameManager/RoomViewModel

Any actions should be wrapped to RoomGameStateSnapshot and to be applyed to GameState back

Combine Room and Corridor to create a unique chain of events and encounters

State machine should own all other states
When you enter a specific screen specific state should be pushed on top of the State Stack
When game session ends or app been killed by CPU only WorldState should be upload to SaveManager

Instead of Stress analogue from DarkestDungeon i can use something like Moral. When hero enter the dungeon he get normal one like 50%. If hero meet rewards, solves puzzles or slane the enemy moral should rise. And the opposite is true. Moral should affect turns, energy and effect of the actions.

May be i should add a special energy for each Dungeon run as a Tile's sequence like let's say 15. So user can go to any place 15 times back and forward. It will motivate user to predict and plan his routine

May be i need a special EventManager as well to react on type of the events of each tiles

The game should be entirely free and for offline playing
